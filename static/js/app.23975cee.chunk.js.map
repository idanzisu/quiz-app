{"version":3,"sources":["components/Quiz.js","App.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","SafeAreaView","style","alignItems","className","View","Text","fontSize","padding","textAlign","length","map","answerOption","title","onPress","nextQuestion","handleAnswerOptionClick"],"mappings":"6LAIe,SAASA,IACpB,IAAMC,EAAY,CAEd,CACIC,aAAc,wBACdC,cAAe,CACX,CAAEC,WAAY,cAAeC,WAAW,GACxC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,0CACdC,cAAe,CACX,CAAEC,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,UAAWC,WAAW,KAG5C,CACIH,aAAc,0CACdC,cAAe,CACX,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,QAASC,WAAW,KAG1C,CACIH,aAAc,4CACdC,cAAe,CACX,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,mBAAoBC,WAAW,KAGrD,CACIH,aAAc,oDACdC,cAAe,CACX,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,IAAKC,WAAW,MAM1C,EAA8CC,mBAAS,GAAvD,WAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,oBAAS,GAA3C,WAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,GAAnC,WAAOK,EAAP,KAAcC,EAAd,KAeA,OACI,kBAACC,EAAA,EAAD,CAAcC,MAAO,CAAEC,WAAY,UAAYC,UAAU,OACpDP,EACG,kBAACQ,EAAA,EAAD,CAAMD,UAAU,iBACZ,kBAACE,EAAA,EAAD,CAAMJ,MAAO,CAAEK,SAAU,GAAIC,QAAS,OAAQC,UAAW,WAAzD,cACgBV,EADhB,WAC+BV,EAAUqB,SAGzC,oCACI,kBAACL,EAAA,EAAD,CAAMD,UAAU,oBACZ,kBAACC,EAAA,EAAD,CAAMD,UAAU,kBACZ,kBAACE,EAAA,EAAD,CAAMJ,MAAO,CAAEK,SAAU,GAAIC,QAAS,OAAQC,UAAW,WAAzD,YAA+Ed,EAAkB,EAAjG,IAAqGN,EAAUqB,SAEnH,kBAACL,EAAA,EAAD,CAAMD,UAAU,iBACZ,kBAACE,EAAA,EAAD,CAAMJ,MAAO,CAAEK,SAAU,GAAIC,QAAS,OAAQC,UAAW,WACpDpB,EAAUM,GAAiBL,gBAIxC,kBAACe,EAAA,EAAD,CAAMD,UAAU,kBACXf,EAAUM,GAAiBJ,cAAcoB,KAAI,SAACC,GAAD,OAC1C,kBAACN,EAAA,EAAD,KACI,kBAAC,IAAD,CACIJ,MAAO,CAAEK,SAAU,GAAIC,QAAS,OAAQC,UAAW,UACnDI,MAAOD,EAAapB,WACpBsB,QAAS,YAtCb,SAACrB,GACzBA,GACAO,EAASD,EAAQ,GAGrB,IAAMgB,EAAepB,EAAkB,EACnCoB,EAAe1B,EAAUqB,OACzBd,EAAmBmB,GAEnBjB,GAAa,GA6BgCkB,CAAwBJ,EAAanB,qBC5F/E,SAASL,IACtB,OACE,kBAAC,EAAD,Q","file":"static/js/app.23975cee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, SafeAreaView } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\n\r\nexport default function App() {\r\n    const questions = [\r\n\r\n        {\r\n            questionText: 'Where is UCF located?',\r\n            answerOptions: [\r\n                { answerText: 'Tallahassee', isCorrect: false },\r\n                { answerText: 'Tampa', isCorrect: false },\r\n                { answerText: 'Orlando', isCorrect: true },\r\n                { answerText: 'Miami', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Which topping does NOT belong on pizza?',\r\n            answerOptions: [\r\n                { answerText: 'Pepperoni', isCorrect: false },\r\n                { answerText: 'Pineapple', isCorrect: true },\r\n                { answerText: 'Olives', isCorrect: false },\r\n                { answerText: 'Sausage', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How many Super Bowls has Tom Brady won?',\r\n            answerOptions: [\r\n                { answerText: 'Six', isCorrect: true },\r\n                { answerText: 'Five', isCorrect: false },\r\n                { answerText: 'Nine', isCorrect: false },\r\n                { answerText: 'Seven', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What is the capital of the United States?',\r\n            answerOptions: [\r\n                { answerText: 'New York', isCorrect: false },\r\n                { answerText: 'California', isCorrect: false },\r\n                { answerText: 'Washington', isCorrect: false },\r\n                { answerText: 'Washington, D.C.', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What is the sign of Silver on the periodic table?',\r\n            answerOptions: [\r\n                { answerText: 'S', isCorrect: false },\r\n                { answerText: 'SV', isCorrect: false },\r\n                { answerText: 'AG', isCorrect: true },\r\n                { answerText: 'A', isCorrect: false },\r\n            ],\r\n        },\r\n\r\n    ];\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n\r\n    const handleAnswerOptionClick = (isCorrect) => {\r\n        if (isCorrect) {\r\n            setScore(score + 1);\r\n        }\r\n\r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n            setCurrentQuestion(nextQuestion);\r\n        } else {\r\n            setShowScore(true);\r\n        }\r\n\r\n    };\r\n    return (\r\n        <SafeAreaView style={{ alignItems: 'center' }} className='app'>\r\n            {showScore ? (\r\n                <View className='score-section'>\r\n                    <Text style={{ fontSize: 20, padding: \"10px\", textAlign: 'center' }}>\r\n                        You scored {score} out of {questions.length}</Text>\r\n                </View>\r\n            ) : (\r\n                    <>\r\n                        <View className='question-section'>\r\n                            <View className='question-count'>\r\n                                <Text style={{ fontSize: 20, padding: \"10px\", textAlign: 'center' }}>Question {currentQuestion + 1}/{questions.length}</Text>\r\n                            </View>\r\n                            <View className='question-text'>\r\n                                <Text style={{ fontSize: 35, padding: \"10px\", textAlign: 'center' }}>\r\n                                    {questions[currentQuestion].questionText}</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View className='answer-section'>\r\n                            {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                                <Text>\r\n                                    <Button\r\n                                        style={{ fontSize: 15, padding: \"10px\", textAlign: 'center' }}\r\n                                        title={answerOption.answerText}\r\n                                        onPress={() => { handleAnswerOptionClick(answerOption.isCorrect) }}>\r\n                                    </Button>\r\n                                </Text>\r\n                            ))}\r\n                        </View>\r\n                    </>\r\n                )}\r\n        </SafeAreaView>\r\n    );\r\n}","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Quiz from './components/Quiz'\n\n\nexport default function App() {\n  return (\n    <Quiz>\n    </Quiz>\n  );\n}"],"sourceRoot":""}